server.port=8081
spring.config.import=optional:file:.env[.properties]
spring.application.name=realty-management-system-auth-user-service
spring.datasource.url=${DATABASE_DATASOURCE_URL}
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# spring.sql.init.mode=never

spring.cloud.config.enabled=false
eureka.client.enabled=false

logging.level.root=ERROR
logging.level.com.stratumtech.realtyauthuser=TRACE

# jwt
jwt.secret.key={"kty":"oct","k":"956PBFst1FguLr5irJD-aQ"}
jwt.token.ttl=86400


# Kafka
spring.kafka.listener.auto-startup=false
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.listener.ack-mode=record
spring.kafka.producer.client-id=${spring.application.name}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=com.stratumtech.realtyauthuser.consumer.serializer.DltMessageSerializer
spring.kafka.producer.retries=3
spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.properties.spring.json.use.type.headers=false
spring.kafka.properties.spring.json.trusted.packages=com.stratumtech.realtyauthuser.dto
spring.kafka.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
kafka.topic.agent-approval-topic=agent-approval-topic
kafka.topic.regional-admin-approval-topic=regional-admin-approval-topic