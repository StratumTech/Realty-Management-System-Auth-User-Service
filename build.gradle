plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.stratumtech'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2025.0.0")
}


dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// JWT
	implementation 'com.nimbusds:nimbus-jose-jwt:10.3.1'

	// Kafka
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.kafka:kafka-clients'

	// Cloud
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// Database
	implementation 'org.flywaydb:flyway-core:10.14.0'
	implementation 'org.flywaydb:flyway-database-postgresql:10.14.0'
	runtimeOnly 'org.postgresql:postgresql'

	// Utils
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.mapstruct:mapstruct:1.6.3'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

	//Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('bootJar') {
	archiveFileName = 'com.stratumtech-user-service-0.0.1-SNAPSHOT.jar'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
// Ensure secrets file is loaded if present
bootRun {
    if (file("src/main/resources/application-secrets.properties").exists()) {
        systemProperty "spring.config.additional-location", "classpath:application-secrets.properties"
    }
}

// Ensure secrets file is loaded if present
bootRun {
    if (file("src/main/resources/application-secrets.properties").exists()) {
        systemProperty "spring.config.additional-location", "classpath:application-secrets.properties"
    }
}
